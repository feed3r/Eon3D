#!/usr/bin/python

# ugly hack for (my) debian's default python2.5
from __future__ import with_statement

import sys

def collect_protos(fsrc):
    P, protos = None, []
    for line in fsrc:
        L = line.strip()
        if L == "EON_PRIVATE":
            P = [ "extern" ]
        elif P:
            if L and L[0] == "{":
                protos.append(P)
                P = []
            else:
                P.append(L)
    return ( " ".join(P) + ";" for P in protos )


def write_header(protos, fdst):
    header = [ "#ifndef EON3D_PRIVATE_H",
               "#define EON3D_PRIVATE_H",
               "",
               "/* autogenerated, do not edit */" 
               "\n",
               "" ]
    footer = [ "\n" ,
               "#endif /* EON3D_PRIVATE_H */",
               "\n" ]
    fdst.write("\n".join(h for h in header))
    fdst.write("\n".join(p for p in protos))
    fdst.write("\n".join(f for f in footer))


def _main(name, args):
    if len(args) != 2:
        sys.stderr.write("usage: %s header.h source.c\n" %(name))
        sys.exit(1)
    hname, cname = args
    with open(cname, "rt") as fsrc:
        with open(hname, "wt") as fdst:
            protos = collect_protos(fsrc)
            write_header(protos, fdst)
            fdst.flush()


if __name__ == "__main__":
   _main(sys.argv[0], sys.argv[1:])

# EOF

